<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.web.springbootpro.mapper.BoardMapper">
    <!--모든 회원정보 조회-->
    <select id="findAll" resultType="com.web.springbootpro.model.Board">
        SELECT *
            FROM
        BOARD
    </select>
    <!--페이징 기능-->
    <select id="getBoardList" resultMap="boardResultMap">
        SELECT *
        FROM (
        SELECT ROWNUM AS rnum, t.*
        FROM (
        SELECT
        B.ID,
        B.TITLE,
        B.CONTENT,
        B.CREATEDATE,
        B."COUNT",
        U.ID AS USERID,
        U.USERNAME,
        U.NICKNAME AS USER_NICKNAME
        FROM BOARD B
        INNER JOIN "USER" U ON B.USER_ID = U.ID -- 여기서 USER_ID는 게시글 작성자의 ID를 참조하는 컬럼 이름으로 가정합니다.
        ORDER BY B.ID ASC
        ) t
        WHERE ROWNUM <![CDATA[<=]]>  #{end}
        )
        WHERE rnum <![CDATA[>=]]>  #{start}
    </select>
    <!--페이징을 위한 BOARD 게시글 수 조회-->
    <select id="getTotalBoard" resultType="int">
        SELECT
        COUNT(*)
            FROM
        Board
    </select>

    <!--검색 페이징 -->
    <select id="findByTitleContaining" resultMap="boardResultMap">
        SELECT *
        FROM (
        SELECT ROWNUM AS rnum, t.*
        FROM (
        SELECT
        B.ID,
        B.TITLE,
        B.CONTENT,
        B.CREATEDATE,
        B."COUNT",
        U.USERNAME,
        U.NICKNAME AS USER_NICKNAME
        FROM BOARD B
        INNER JOIN "USER" U ON B.USER_ID = U.ID
        WHERE
        <choose>
            <when test="keyword != null and type.equals('')">
                B.TITLE LIKE '%' || #{keyword} || '%'
            </when>
            <when test="type != null and type.equals('title')">
                B.TITLE LIKE '%' || #{keyword} || '%'
            </when>
            <when test="type != null and type.equals('content')">
               B.CONTENT LIKE '%' || #{keyword} || '%'
            </when>
            <when test="type != null and type.equals('writer')">
                U.NICKNAME LIKE '%' || #{keyword} || '%'
            </when>
            <otherwise>
                1=1
            </otherwise>
        </choose>
        ORDER BY ID ASC
        ) t
        WHERE ROWNUM <![CDATA[<=]]>  #{end}
        )
        WHERE rnum <![CDATA[>=]]>  #{start}
    </select>
    <!--페이징을 위한 BOARD 게시글 수 조회-->
    <select id="searchTotalBoard" resultType="int">
        SELECT COUNT(*)
        FROM Board B
        INNER JOIN "USER" U ON B.USER_ID = U.ID
        WHERE
        <choose>
            <when test="type != null and type.equals('title')">
                B.TITLE LIKE '%' || #{keyword} || '%'
            </when>
            <when test="type != null and type.equals('content')">
                 B.CONTENT LIKE '%' || #{keyword} || '%'
            </when>
            <when test="type != null and type.equals('writer')">
                 U.NICKNAME LIKE '%' || #{keyword} || '%'
            </when>
            <otherwise>
                1=1
            </otherwise>
        </choose>
    </select>

    <insert id="boardSave" parameterType="com.web.springbootpro.model.Board">
        INSERT INTO BOARD(
                          ID
                         ,TITLE
                         ,CONTENT
                         ,"COUNT"
                         ,USER_ID
                         ,CREATEDATE
                         ,SHOW
        ) VALUES (
                  BOARD_SEQ.NEXTVAL
                 ,#{title}
                 ,#{content}
                 ,#{count}
                 ,#{userid.id}
                 ,TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS')
                 ,'Y')
    </insert>

    <resultMap id="boardResultMap" type="com.web.springbootpro.model.Board">
        <id property="id" column="ID"/>
        <result property="title" column="TITLE"/>
        <result property="content" column="CONTENT"/>
        <result property="count" column="COUNT"/>

        <result property="createDate" column="CREATEDATE"/>
        <result property="show" column="SHOW"/>
        <association property="userid" javaType="com.web.springbootpro.model.User" resultMap="userResultMap"/>
    </resultMap>

    <resultMap id="userResultMap" type="com.web.springbootpro.model.User">
        <id property="id" column="USERID" />
        <result property="username" column="USERNAME" />
        <result property="role" column="ROLE" />
        <result property="password" column="PASSWORD" />
        <result property="nickname" column="USER_NICKNAME" />
        <result property="email" column="EMAIL" />
        <result property="createDate" column="CREATEDATE" />
    </resultMap>


    <select id="findById" resultMap="boardResultMap">
        SELECT
            B.ID,
            B.TITLE,
            B.CONTENT,
            B."COUNT",
            B.USER_ID AS USERID,
            B.CREATEDATE,
            B.SHOW,
            U.ID,
            U.USERNAME
        FROM
            BOARD B
        LEFT JOIN
            "USER" U
        ON
            U.ID = B.USER_ID
        WHERE B.ID = #{id}
    </select>


    <!-- 댓글 삭제를 위한 SQL -->
    <delete id="deleteByReplyId">
        DELETE FROM REPLY WHERE BOARD_ID = #{id}
    </delete>

    <!-- 게시글 삭제 -->
    <delete id="deleteById" parameterType="long">
        DELETE FROM BOARD WHERE ID = #{id}
    </delete>

    <update id="updateBoard" parameterType="com.web.springbootpro.model.Board" >
        UPDATE "BOARD"
        SET TITLE = #{title},
            CONTENT = #{content}
        WHERE ID = #{id}

    </update>

    <update id="updateCount" parameterType="long">
        UPDATE BOARD
        SET "COUNT" = "COUNT" + 1
        WHERE ID = #{id}
    </update>


</mapper>