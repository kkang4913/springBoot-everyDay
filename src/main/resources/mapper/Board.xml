<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.web.springbootpro.mapper.BoardMapper">
    <!--모든 회원정보 조회-->
    <select id="findAll" resultType="com.web.springbootpro.model.Board">
        SELECT *
            FROM
        BOARD
    </select>
    <!--페이징 기능-->
    <select id="getBoardList" resultType="com.web.springbootpro.model.Board">
        SELECT *
        FROM (
        SELECT ROWNUM AS rnum, t.*
        FROM (
        SELECT
         ID
        ,TITLE
        ,CONTENT
        ,"COUNT"
        FROM BOARD
        ORDER BY ID ASC
        ) t
        WHERE ROWNUM <![CDATA[<=]]>  #{end}
        )
        WHERE rnum <![CDATA[>=]]>  #{start}
    </select>
    <!--페이징을 위한 BOARD 게시글 수 조회-->
    <select id="getTotalBoard" resultType="int">
        SELECT
        COUNT(*)
            FROM
        Board
    </select>

    <insert id="boardSave" parameterType="com.web.springbootpro.model.Board">
        INSERT INTO BOARD(
                          ID
                         ,TITLE
                         ,CONTENT
                         ,"COUNT"
                         ,USER_ID
                         ,CREATEDATE
                         ,SHOW
        ) VALUES (
                 BOARD_SEQ.NEXTVAL
                 ,#{title}
                 ,#{content}
                 ,#{count}
                 ,#{userid.id}
                 ,TO_CHAR(SYSDATE,'YYYY-MM-DD HH24:MI:SS')
                 ,'Y')
    </insert>

    <resultMap id="boardResultMap" type="com.web.springbootpro.model.Board">
        <id property="id" column="ID"/>
        <result property="title" column="TITLE"/>
        <result property="content" column="CONTENT"/>
        <result property="count" column="COUNT"/>

        <result property="createDate" column="CREATEDATE"/>
        <result property="show" column="SHOW"/>
        <association property="userid" javaType="com.web.springbootpro.model.User" resultMap="userResultMap"/>

        <!-- Reply에 대한 resultMap 추가 -->
        <collection property="replys" ofType="com.web.springbootpro.model.Reply">
            <id property="id" column="REPLYS"/>
            <result property="content" column="REPLY_CONTENT"/>
            <result property="createDate" column="REPLY_CREATEDATE"/>
            <!-- 필요한 필드들을 추가로 정의해주세요. -->
                <association property="user" javaType="com.web.springbootpro.model.User" resultMap="userResultMap"/>
        </collection>
    </resultMap>

    <resultMap id="userResultMap" type="com.web.springbootpro.model.User">
        <id property="id" column="USERID" />
        <result property="username" column="USERNAME" />
        <result property="role" column="ROLE" />
        <result property="password" column="PASSWORD" />
        <result property="email" column="EMAIL" />
        <result property="createDate" column="CREATEDATE" />
    </resultMap>


    <select id="findById" resultMap="boardResultMap">
        SELECT
            B.ID,
            B.TITLE,
            B.CONTENT,
            B."COUNT",
            B.USER_ID,
            B.CREATEDATE,
            B.SHOW,
            U.ID AS USERID,
            U.USERNAME,
            U.PASSWORD,
            U.EMAIL,
            U.ROLE,
            U.CREATEDATE,
            CASE WHEN R.ID IS NOT NULL THEN R.ID ELSE NULL END AS REPLYS,
            R.CONTENT AS REPLY_CONTENT,
            R.CREATEDATE AS REPLY_CREATEDATE
        FROM
            BOARD B
                JOIN "USER" U ON B.USER_ID = U.ID
                LEFT JOIN REPLY R ON B.ID = R.BOARD_ID
        WHERE B.ID = #{id}
    </select>


    <delete id="deleteById">
        DELETE FROM "BOARD"
        WHERE
            ID = #{id}
    </delete>

    <update id="updateBoard" parameterType="com.web.springbootpro.model.Board" >
        UPDATE "BOARD"
        SET TITLE = #{title},
            CONTENT = #{content}
        WHERE ID = #{id}

    </update>



</mapper>