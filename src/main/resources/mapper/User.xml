<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.web.springbootpro.mapper.UserMapper">
    <!--회원가입 -->
    <insert id="userJoin" parameterType="com.web.springbootpro.model.User">
        INSERT INTO "USER" (
        ID,
        USERNAME,
        PASSWORD,
        NICKNAME,
        EMAIL,
        CREATEDATE,
        OAUTH
        ) VALUES (
        USER_SEQ.NEXTVAL,
        #{username},
        #{password},
        <choose>
            <when test="nickname != null">
                #{nickname}
            </when>
            <otherwise>
                NULL
            </otherwise>
        </choose>,
        #{email},
        TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI:SS'),
        <choose>
            <when test="oauth != null">
                #{oauth}
            </when>
            <otherwise>
                NULL
            </otherwise>
        </choose>
        )
    </insert>
    <!--회원정보 조회-->
    <select id="findById" resultType="com.web.springbootpro.model.User" >
        SELECT
             ID
            ,USERNAME
            ,PASSWORD
            ,NICKNAME
            ,EMAIL
            ,ROLE
            ,CREATEDATE
        FROM
        "USER"
        WHERE
        ID = #{id}
    </select>
    <!--Username 회원정보 조회-->
    <select id="findByUsername" resultType="com.web.springbootpro.model.User" >
        SELECT
             ID
            ,USERNAME
            ,PASSWORD
            ,EMAIL
            ,NICKNAME
            ,ROLE
            ,CREATEDATE
            ,OAUTH
        FROM
            "USER"
        WHERE
            USERNAME = #{username}
    </select>
    <!--로그인 회원정보 조회-->
    <select id="userLogin" resultType="com.web.springbootpro.model.User" >
        SELECT
            ID
             ,USERNAME
             ,PASSWORD
             ,EMAIL
             ,NICKNAME
             ,ROLE
             ,CREATEDATE
        FROM
            "USER"
        WHERE
            EMAIL = #{email} AND PASSWORD= #{password}
    </select>

    <!--모든 회원정보 조회-->
    <select id="findAll" resultType="com.web.springbootpro.model.User">
        SELECT *
            FROM
        "USER"

    </select>


    <select id="getUserList" resultType="com.web.springbootpro.model.User">
        SELECT *
            FROM (
                SELECT ROWNUM AS rnum, t.*
                   FROM (
                    SELECT
                         ID
                        ,USERNAME
                        ,PASSWORD
                        ,EMAIL
                        ,ROLE
                        ,CREATEDATE
                       FROM "USER"
                ORDER BY ID ASC
            ) t
        WHERE ROWNUM <![CDATA[<=]]>  #{end}
        )
        WHERE rnum <![CDATA[>=]]>  #{start}
    </select>
    <!--페이징을 위한 유저수 조회-->
    <select id="getTotalUsers" resultType="int">
        SELECT
            COUNT(*)
        FROM
            "USER"

    </select>

    <update id="userUpdate" parameterType="com.web.springbootpro.model.User">
        UPDATE "USER"
            SET  PASSWORD = #{password}
                ,NICKNAME = #{nickname}
        WHERE ID = #{id}
    </update>

    <delete id="deleteById" parameterType="com.web.springbootpro.model.User">
        DELETE
            FROM "USER"
        WHERE ID =#{id}
    </delete>
    <!-- 아이디 중복 유효성 검사 -->
    <select id="existByUserNickname" resultType="int">
        SELECT COUNT(*) FROM "USER" WHERE NICKNAME = #{nickname,jdbcType=VARCHAR}
    </select>
    <select id="existByUsername" resultType="int">
        SELECT COUNT(*) FROM "USER" WHERE USERNAME = #{username}
    </select>
    <select id="existByUserEmail" resultType="int">
        SELECT COUNT(*) FROM "USER" WHERE EMAIL = #{email}
    </select>



</mapper>